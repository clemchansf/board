{"version":3,"sources":["components/Board.js","DispatchContext.js","StateContext.js","components/CreateCard.js","components/Card.js","components/Deck.js","components/Overlay.js","components/Prompt.js","components/Reset.js","data.js","index.js"],"names":["Board","props","react_default","a","createElement","className","children","DispatchContext","createContext","StateContext","CreateCard","dispatch","useContext","state","_useState","useState","_useState2","Object","slicedToArray","newItem","setNewItem","itemInput","useRef","handleAdd","e","preventDefault","Boolean","type","card","content","current","focus","useEffect","setTimeout","editing","prompting","onSubmit","ref","onChange","target","value","onClick","Card","head","style","color","deckI","id","taskI","task","tail","Deck","tasks","map","components_Card","key","concat","Overlay","setContent","newContent","list","editCard","htmlFor","name","command","_state$editCard","_state$editCard2","Prompt","message","setMessage","promptMessage","Reset","taskCount","reduce","taskCnt","item","length","backgroundColor","data","Main","persistedList","localStorage","getItem","initialState","JSON","parse","_useImmerReducer","useImmerReducer","draft","action","movedItem","_ref","push","splice","Error","_useImmerReducer2","document","title","window","scrollTo","setItem","stringify","src_StateContext","Provider","src_DispatchContext","components_Board","itemI","components_Deck","components_CreateCard","components_Reset","components_Overlay","components_Prompt","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.08f7514f.chunk.js","sourcesContent":["import React from \"react\"\n\nfunction Board(props) {\n  return <div className=\"board\">{props.children}</div>\n}\nexport default Board\n","import { createContext } from \"react\"\n\nconst DispatchContext = createContext()\n\nexport default DispatchContext\n","import { createContext } from \"react\"\n\nconst StateContext = createContext()\n\nexport default StateContext\n","import React, { useState, useEffect, useRef, useContext } from \"react\"\n\nimport DispatchContext from \"../DispatchContext\"\nimport StateContext from \"../StateContext\"\n\nfunction CreateCard(props) {\n  const { dispatch } = useContext(DispatchContext)\n  const { state } = useContext(StateContext)\n\n  const [newItem, setNewItem] = useState(\"\")\n  const itemInput = useRef(null)\n  useEffect(() => {\n    setTimeout(() => itemInput.current.focus(), 0)\n  }, [])\n\n  function handleAdd(e) {\n    e.preventDefault()\n\n    if (!Boolean(newItem)) return\n\n    dispatch({ type: \"create\", card: { content: newItem } })\n\n    setNewItem(\"\")\n    itemInput.current.focus()\n  }\n  return (\n    <div className=\"create-item\">\n      <form\n        className={state.editing || state.prompting ? \" blurred\" : \"\"}\n        onSubmit={handleAdd}\n      >\n        <input\n          ref={itemInput}\n          onChange={e => setNewItem(e.target.value)}\n          value={newItem}\n        />\n        <button onClick={handleAdd} className=\"btn btn-primary\">\n          +\n        </button>\n      </form>\n    </div>\n  )\n}\nexport default CreateCard\n","import React, { useContext } from \"react\"\n\nimport DispatchContext from \"../DispatchContext\"\nimport StateContext from \"../StateContext\"\n\nfunction Card(props) {\n  const { dispatch } = useContext(DispatchContext)\n  const { state } = useContext(StateContext)\n\n  function handleClickLeft(e) {\n    e.preventDefault()\n    dispatch({\n      type: \"moveLeft\",\n      card: { deckI: props.id, taskI: props.taskI }\n    })\n  }\n  function handleClickRight(e) {\n    e.preventDefault()\n    dispatch({\n      type: \"moveRight\",\n      card: { deckI: props.id, taskI: props.taskI }\n    })\n  }\n  function handleEdit(e) {\n    e.preventDefault()\n    dispatch({\n      type: \"edit\",\n      card: { deckI: props.id, taskI: props.taskI }\n    })\n  }\n  return (\n    <div\n      className={\"card\" + (state.editing || state.prompting ? \" blurred\" : \"\")}\n    >\n      {props.head ? (\n        <span> </span>\n      ) : (\n        <span style={{ color: props.color }} onClick={handleClickLeft}>\n          {\"◄\"}\n        </span>\n      )}\n      <p onClick={handleEdit}>{props.task}</p>\n      {props.tail ? (\n        <span> </span>\n      ) : (\n        <span style={{ color: props.color }} onClick={handleClickRight}>\n          {\"►\"}\n        </span>\n      )}\n    </div>\n  )\n}\nexport default Card\n","import React from \"react\"\nimport Card from \"./Card\"\n\nfunction Deck(props) {\n  return props.tasks.map((task, taskI) => (\n    <Card\n      head={props.head}\n      tail={props.tail}\n      key={`${task}${taskI}`}\n      task={task}\n      taskI={taskI}\n      id={props.id}\n      color={props.color}\n    />\n  ))\n}\nexport default Deck\n","import React, { useContext, useEffect, useState } from \"react\"\n\nimport DispatchContext from \"../DispatchContext\"\nimport StateContext from \"../StateContext\"\n\nfunction Overlay() {\n  const [content, setContent] = useState(\"\")\n  const { dispatch } = useContext(DispatchContext)\n  const { state } = useContext(StateContext)\n  const newContent =\n    state.list[state.editCard.deckI].tasks[state.editCard.taskI]\n\n  /* fix issues #17 */\n  useEffect(() => {\n    setContent(newContent)\n  }, [newContent])\n\n  function handleCancel(e) {\n    e.preventDefault()\n    dispatch({ type: \"cancel\", command: \"edit\" })\n  }\n\n  function handleDelete(e) {\n    e.preventDefault()\n    const { deckI, taskI } = state.editCard\n    dispatch({ type: \"delete\", card: { deckI, taskI } })\n  }\n\n  function handleSave(e) {\n    e.preventDefault()\n    const { deckI, taskI } = state.editCard\n    dispatch({ type: \"update\", card: { deckI, taskI, content } })\n  }\n  return (\n    <div className={\"overlay\" + (state.editing ? \" overlay--visible\" : \"\")}>\n      <div className=\"overlay-inner\">\n        <p className=\"end-message\"></p>\n        <form>\n          <div className={\"form-group\" + (state.prompting ? \" blurred\" : \"\")}>\n            <label htmlFor=\"post-body\" className=\"text-muted mb-1 d-block\">\n              <small>Task Content</small>\n            </label>\n            <div className={state.prompting ? \" blurred\" : \"\"}>\n              <textarea\n                name=\"body\"\n                id=\"post-body\"\n                className={\"body-content tall-textarea form-control\"}\n                type=\"text\"\n                value={content}\n                onChange={e => setContent(e.target.value)}\n              ></textarea>\n            </div>\n          </div>\n          <div className=\"control\">\n            <div className={state.prompting ? \" blurred\" : \"\"}>\n              <button onClick={handleCancel} className=\"canc\">\n                Cancel\n              </button>\n            </div>\n            <button\n              onClick={handleDelete}\n              className={\"del\" + (state.prompting ? \" blurred\" : \"\")}\n            >\n              Delete\n            </button>\n            <button\n              onClick={handleSave}\n              className={\"save\" + (state.prompting ? \" blurred\" : \"\")}\n            >\n              Save\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\nexport default Overlay\n","import React, { useContext, useEffect, useState } from \"react\"\n\nimport DispatchContext from \"../DispatchContext\"\nimport StateContext from \"../StateContext\"\n\nfunction Prompt() {\n  const { dispatch } = useContext(DispatchContext)\n  const { state } = useContext(StateContext)\n  const [message, setMessage] = useState()\n\n  useEffect(() => {\n    setMessage(state.promptMessage)\n  }, [state.promptMessage])\n\n  function handleCancel(e) {\n    e.preventDefault()\n    dispatch({ type: \"cancel\", command: state.command })\n  }\n\n  function handleContinue(e) {\n    e.preventDefault()\n    dispatch({ type: \"continue\", command: state.command })\n  }\n  return (\n    <div className={\"overlay\" + (state.prompting ? \" overlay--visible\" : \"\")}>\n      <div className=\"overlay-inner\">\n        <p className=\"end-message\">{message}</p>\n        <button className=\"cancel-prompt\" onClick={handleCancel}>\n          Cancel\n        </button>\n        <button className=\"prompt\" onClick={handleContinue}>\n          Continue\n        </button>\n      </div>\n    </div>\n  )\n}\nexport default Prompt\n","import React, { useContext } from \"react\"\nimport DispatchContext from \"../DispatchContext\"\nimport StateContext from \"../StateContext\"\n\nfunction Reset() {\n  const { dispatch } = useContext(DispatchContext)\n  const { state } = useContext(StateContext)\n  const taskCount = state.list.reduce(\n    (taskCnt, item) => item.tasks.length + taskCnt,\n    0\n  )\n\n  function handleResetBoard(e) {\n    e.preventDefault()\n    dispatch({ type: \"reset\", command: \"resetAll\" })\n  }\n  return (\n    <button\n      onClick={taskCount > 0 ? handleResetBoard : null}\n      style={taskCount > 0 ? {} : { backgroundColor: \"silver\" }}\n      className={\n        \"btn reset\" + (state.editing || state.prompting ? \" blurred\" : \"\")\n      }\n    >\n      Reset\n    </button>\n  )\n}\nexport default Reset\n","const data = [\n  {\n    id: 1,\n    name: \"Open\",\n    style: { backgroundColor: \"#344759\" },\n    tasks: []\n  },\n  {\n    id: 2,\n    name: \"In Progress\",\n    style: { backgroundColor: \"#39a59c\" },\n    tasks: []\n  },\n  {\n    id: 3,\n    name: \"In Review\",\n    style: { backgroundColor: \"#8e6e95\" },\n    tasks: []\n  },\n  {\n    id: 4,\n    name: \"Done\",\n    style: { backgroundColor: \"#e8741e\" },\n    tasks: []\n  }\n]\nexport default data\n","import React, { useEffect } from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport { useImmerReducer } from \"use-immer\"\r\nimport Board from \"./components/Board\"\r\nimport CreateCard from \"./components/CreateCard\"\r\nimport Deck from \"./components/Deck\"\r\nimport Overlay from \"./components/Overlay\"\r\nimport Prompt from \"./components/Prompt\"\r\nimport Reset from \"./components/Reset\"\r\nimport data from \"./data\"\r\nimport \"./assets/css/main.css\"\r\n\r\nimport DispatchContext from \"./DispatchContext\"\r\nimport StateContext from \"./StateContext\"\r\n\r\nfunction Main(props) {\r\n  const persistedList = localStorage.getItem(\"boardappList\")\r\n  const initialState = {\r\n    editCard: { deckI: 0, taskI: 0 },\r\n    editing: false,\r\n    list: (persistedList && JSON.parse(persistedList)) || data,\r\n    prompting: false,\r\n    promptMessage: \" \"\r\n  }\r\n\r\n  function reducer(draft, action) {\r\n    const { deckI, taskI, content } = action.card || {}\r\n    let movedItem\r\n\r\n    switch (action.type) {\r\n      case \"cancel\":\r\n        if (action.command === \"edit\") {\r\n          draft.editing = false\r\n          return\r\n        }\r\n        if (action.command === \"resetAll\") {\r\n          draft.prompting = false\r\n          /*\r\n              don't reset message with space, it will make the\r\n              promptMessage disappears first creating a sudden \r\n              jumping motions of the prompt buttons\r\n           */\r\n          // draft.promptMessage = \" \",\r\n          return\r\n        }\r\n        break\r\n\r\n      case \"continue\":\r\n        if (action.command === \"resetAll\") {\r\n          draft.list = data\r\n          draft.prompting = false\r\n        }\r\n        return\r\n\r\n      case \"create\":\r\n        draft.list[0].tasks.push(content)\r\n        return\r\n\r\n      case \"delete\":\r\n        draft.list[deckI].tasks.splice(taskI, 1)\r\n        draft.editing = false\r\n        return\r\n\r\n      case \"edit\":\r\n        draft.editing = true\r\n        draft.editCard.deckI = deckI\r\n        draft.editCard.taskI = taskI\r\n        return\r\n\r\n      case \"reset\":\r\n        draft.prompting = true\r\n        draft.promptMessage = \"Reset will clear all, press continue to proceed.\"\r\n        draft.command = \"resetAll\"\r\n        return\r\n\r\n      case \"update\":\r\n        draft.editing = false\r\n        draft.list[deckI].tasks[taskI] = content\r\n        return\r\n\r\n      case \"moveLeft\":\r\n        movedItem = draft.list[deckI].tasks.splice(taskI, 1)\r\n        draft.list[deckI - 1].tasks.push(movedItem)\r\n        return\r\n\r\n      case \"moveRight\":\r\n        movedItem = draft.list[deckI].tasks.splice(taskI, 1)\r\n        draft.list[deckI + 1].tasks.push(movedItem)\r\n        return\r\n\r\n      default:\r\n        throw new Error()\r\n    }\r\n  }\r\n\r\n  const [state, dispatch] = useImmerReducer(reducer, initialState)\r\n\r\n  useEffect(() => {\r\n    document.title = `${props.title}`\r\n    window.scrollTo(0, 0)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"boardappList\", JSON.stringify(state.list))\r\n  }, [state.list])\r\n\r\n  return (\r\n    <StateContext.Provider value={{ state }}>\r\n      <DispatchContext.Provider value={{ dispatch }}>\r\n        <Board title=\"Board App\">\r\n          {state.list.map((item, itemI) => (\r\n            <div key={item.id} className=\"container\">\r\n              <div\r\n                className={\r\n                  \"header\" +\r\n                  (state.editing || state.prompting ? \" blurred\" : \"\")\r\n                }\r\n                style={item.style}\r\n              >\r\n                {item.name}\r\n              </div>\r\n              <Deck\r\n                head={itemI === 0}\r\n                tail={itemI === state.list.length - 1}\r\n                id={itemI}\r\n                tasks={item.tasks}\r\n                color={item.style.backgroundColor}\r\n              />\r\n              {item.name !== \"Open\" ? \"\" : <CreateCard />}\r\n            </div>\r\n          ))}\r\n          <Reset />\r\n        </Board>\r\n        <Overlay />\r\n        <Prompt />\r\n      </DispatchContext.Provider>\r\n    </StateContext.Provider>\r\n  )\r\n}\r\n\r\nReactDOM.render(<Main title=\"Board App\" />, document.querySelector(\"#root\"))\r\n"],"sourceRoot":""}