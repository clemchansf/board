{"version":3,"sources":["components/Board.js","components/Card.js","components/Deck.js","components/CreateCard.js","data.js","index.js"],"names":["Board","props","className","children","Card","head","style","color","onClick","e","preventDefault","setList","prev","newList","JSON","parse","stringify","movedItem","id","tasks","splice","taskI","push","localStorage","setItem","task","tail","Deck","map","CreateCard","useState","newItem","setNewItem","itemInput","useRef","handleAdd","Boolean","current","focus","useEffect","setTimeout","onSubmit","ref","onChange","target","value","data","name","backgroundColor","Main","persistedList","getItem","list","document","title","window","scrollTo","item","itemI","length","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.2d2fa401.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\"\n\nfunction Board(props) {\n  return <div className=\"board\">{props.children}</div>\n}\nexport default Board\n","import React, { useState, useEffect } from \"react\"\n\nfunction Card(props) {\n  function handleClickLeft(e) {\n    e.preventDefault()\n    props.setList(prev => {\n      // clone prev list\n      let newList = JSON.parse(JSON.stringify(prev))\n      // sub from current by splicing out itself\n      let movedItem = newList[props.id].tasks.splice(props.taskI, 1)\n      // add spliced out item to the left [id - 1] item\n      newList[props.id - 1].tasks.push(movedItem)\n      localStorage.setItem(\"boardappList\", JSON.stringify(newList))\n      return newList\n    })\n  }\n  function handleClickRight(e) {\n    e.preventDefault()\n    props.setList(prev => {\n      // clone prev list\n      let newList = JSON.parse(JSON.stringify(prev))\n      // sub from current by splicing out itself\n      let movedItem = newList[props.id].tasks.splice(props.taskI, 1)\n      // add spliced out item to the right [id + 1] item\n      newList[props.id + 1].tasks.push(movedItem)\n      localStorage.setItem(\"boardappList\", JSON.stringify(newList))\n      return newList\n    })\n  }\n  return (\n    <div className=\"card\">\n      {props.head ? (\n        <span> </span>\n      ) : (\n        <span style={{ color: props.color }} onClick={handleClickLeft}>\n          {\"◄\"}\n        </span>\n      )}\n      <p>{props.task}</p>\n      {props.tail ? (\n        <span> </span>\n      ) : (\n        <span style={{ color: props.color }} onClick={handleClickRight}>\n          {\"►\"}\n        </span>\n      )}\n    </div>\n  )\n}\nexport default Card\n","import React, { useState, useEffect } from \"react\"\nimport Card from \"./Card\"\n\nfunction Deck(props) {\n  return props.tasks.map((task, taskI) => (\n    <Card\n      head={props.head}\n      tail={props.tail}\n      key={task}\n      task={task}\n      taskI={taskI}\n      id={props.id}\n      setList={props.setList}\n      color={props.color}\n    />\n  ))\n}\nexport default Deck\n","import React, { useState, useEffect, useRef } from \"react\"\n\nfunction CreateCard(props) {\n  const [newItem, setNewItem] = useState(\"\")\n  const itemInput = useRef(null)\n  useEffect(() => {\n    setTimeout(() => itemInput.current.focus(), 0)\n  }, [])\n\n  function handleAdd(e) {\n    e.preventDefault()\n\n    if (!Boolean(newItem)) return\n\n    props.setList(prev => {\n      let newList = JSON.parse(JSON.stringify(prev))\n      newList[0].tasks.push(newItem)\n      localStorage.setItem(\"boardappList\", JSON.stringify(newList))\n      return newList\n    })\n    setNewItem(\"\")\n    itemInput.current.focus()\n  }\n  return (\n    <div className=\"create-item\">\n      <form onSubmit={handleAdd}>\n        <input\n          ref={itemInput}\n          onChange={e => setNewItem(e.target.value)}\n          value={newItem}\n        />\n        <button onClick={handleAdd} className=\"btn btn-primary\">\n          +\n        </button>\n      </form>\n    </div>\n  )\n}\nexport default CreateCard\n","const data = [\n  {\n    id: 1,\n    name: \"Open\",\n    style: { backgroundColor: \"#344759\" },\n    tasks: []\n  },\n  {\n    id: 2,\n    name: \"In Progress\",\n    style: { backgroundColor: \"#39a59c\" },\n    tasks: []\n  },\n  {\n    id: 3,\n    name: \"In Review\",\n    style: { backgroundColor: \"#8e6e95\" },\n    tasks: []\n  },\n  {\n    id: 4,\n    name: \"Done\",\n    style: { backgroundColor: \"#e8741e\" },\n    tasks: []\n  }\n]\nexport default data\n","import React, { useEffect, useState } from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport Board from \"./components/Board\"\r\nimport Deck from \"./components/Deck\"\r\nimport CreateCard from \"./components/CreateCard\"\r\nimport data from \"./data\"\r\n\r\nfunction Main(props) {\r\n  const persistedList = localStorage.getItem(\"boardappList\")\r\n  const [list, setList] = useState(\r\n    (persistedList && JSON.parse(persistedList)) || data\r\n  )\r\n\r\n  useEffect(() => {\r\n    document.title = `${props.title}`\r\n    window.scrollTo(0, 0)\r\n  }, [])\r\n\r\n  return (\r\n    <Board title=\"Board App\">\r\n      {list.map((item, itemI) => (\r\n        <div key={item.id} className=\"container\">\r\n          <div className=\"header\" style={item.style}>\r\n            {item.name}\r\n          </div>\r\n          <Deck\r\n            head={itemI === 0}\r\n            tail={itemI === list.length - 1}\r\n            id={itemI}\r\n            tasks={item.tasks}\r\n            setList={setList}\r\n            color={item.style.backgroundColor}\r\n          />\r\n          {item.name !== \"Open\" ? \"\" : <CreateCard setList={setList} />}\r\n        </div>\r\n      ))}\r\n    </Board>\r\n  )\r\n}\r\n\r\nReactDOM.render(<Main title=\"Board App\" />, document.querySelector(\"#root\"))\r\n"],"sourceRoot":""}